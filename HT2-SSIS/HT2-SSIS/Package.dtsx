<?xml version="1.0"?>
<DTS:Executable xmlns:DTS="www.microsoft.com/SqlServer/Dts"
  DTS:refId="Package"
  DTS:CreationDate="3/3/2021 11:59:00 AM"
  DTS:CreationName="Microsoft.Package"
  DTS:CreatorComputerName="DESKTOP-S0BBK00"
  DTS:CreatorName="DESKTOP-S0BBK00\CHICAS"
  DTS:DTSID="{6C6CF1F8-EF73-4243-8079-426F3FB3EF37}"
  DTS:ExecutableType="Microsoft.Package"
  DTS:LastModifiedProductVersion="15.0.2000.152"
  DTS:LocaleID="3082"
  DTS:ObjectName="Package"
  DTS:PackageType="5"
  DTS:VersionBuild="30"
  DTS:VersionGUID="{6EC5C196-8B84-462F-894A-28C252A732D4}">
  <DTS:Property
    DTS:Name="PackageFormatVersion">8</DTS:Property>
  <DTS:ConnectionManagers>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[DESKTOP-S0BBK00.HT2]"
      DTS:CreationName="ADO.NET:System.Data.SqlClient.SqlConnection, System.Data, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089"
      DTS:DTSID="{8EED249F-9F0A-4741-B3BB-556D095585D2}"
      DTS:ObjectName="DESKTOP-S0BBK00.HT2">
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:ConnectionString="Data Source=DESKTOP-S0BBK00;Initial Catalog=HT2;Integrated Security=True;Application Name=SSIS-Package-{8EED249F-9F0A-4741-B3BB-556D095585D2}DESKTOP-S0BBK00.HT2;" />
      </DTS:ObjectData>
    </DTS:ConnectionManager>
  </DTS:ConnectionManagers>
  <DTS:Variables>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{2CD6560B-CE15-4C50-AAA5-1B2680F66E51}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="Delimitador">
      <DTS:VariableValue
        DTS:DataType="8">|</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{F0EBED2B-7E48-465B-A449-BFB1D88DB122}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="Extension">
      <DTS:VariableValue
        DTS:DataType="8">.txt</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{5B775838-6BC3-4A58-8F51-2601CA54623D}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="FolderError">
      <DTS:VariableValue
        DTS:DataType="8">C:\Users\CHICAS\GIT\HT2-Seminario-2\results</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{BA8A14B3-33FD-4437-9D72-3E0A18D73317}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="FolderOrigen">
      <DTS:VariableValue
        DTS:DataType="8">C:\Users\CHICAS\GIT\HT2-Seminario-2\source</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{40501B26-DC18-4A20-9328-6FA6D218E9FD}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="TablaDestino">
      <DTS:VariableValue
        DTS:DataType="8">Temporal</DTS:VariableValue>
    </DTS:Variable>
  </DTS:Variables>
  <DTS:Executables>
    <DTS:Executable
      DTS:refId="Package\Cargar Temporal"
      DTS:CreationName="Microsoft.ScriptTask"
      DTS:Description="Script Task"
      DTS:DTSID="{95E6DFB0-3D37-44C2-A494-A8ACEA16CDB8}"
      DTS:ExecutableType="Microsoft.ScriptTask"
      DTS:LocaleID="-1"
      DTS:ObjectName="Cargar Temporal"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:ObjectData>
        <ScriptProject
          Name="ST_a4a2ca7f92f54dc0a692971f65d76eda"
          VSTAMajorVersion="15"
          VSTAMinorVersion="0"
          Language="CSharp"
          ReadOnlyVariables="User::Delimitador,User::Extension,User::FolderError,User::FolderOrigen,User::TablaDestino">
          <ProjectItem
            Name="Properties\Resources.resx"
            Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></ProjectItem>
          <ProjectItem
            Name="Properties\Settings.Designer.cs"
            Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_a4a2ca7f92f54dc0a692971f65d76eda.Properties.Settings.get_Default():ST_a4a2ca7f92f54dc0a692971f65d76eda.Properties.Sett" +
    "ings")]

namespace ST_a4a2ca7f92f54dc0a692971f65d76eda.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}]]></ProjectItem>
          <ProjectItem
            Name="ST_a4a2ca7f92f54dc0a692971f65d76eda.csproj"
            Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProductVersion>8.0.30703</ProductVersion>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{7F58618B-02EA-48A9-B471-0B5EE5152321}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>ST_a4a2ca7f92f54dc0a692971f65d76eda</RootNamespace>
    <AssemblyName>ST_a4a2ca7f92f54dc0a692971f65d76eda</AssemblyName>
    <TargetFrameworkVersion>v4.7</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>
    <TargetFrameworkProfile></TargetFrameworkProfile>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>.\bin\Debug\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>.\bin\Release\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="System" />
    <Reference Include="System.Data" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
    <Reference Include="Microsoft.SqlServer.ManagedDTS, Version=15.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.ScriptTask, Version=15.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
  </ItemGroup>
  <ItemGroup>
    <AppDesigner Include="Properties\" />
    <Compile Include="Properties\AssemblyInfo.cs">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="Properties\Resources.resx">
      <Generator>ResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.cs</LastGenOutput>
    </EmbeddedResource>
    <Compile Include="Properties\Resources.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Resources.resx</DependentUpon>
    </Compile>
    <None Include="Properties\Settings.settings">
      <Generator>SettingsSingleFileGenerator</Generator>
      <LastGenOutput>Settings.Designer.cs</LastGenOutput>
    </None>
    <Compile Include="Properties\Settings.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Settings.settings</DependentUpon>
    </Compile>
    <Compile Include="ScriptMain.cs">
      <SubType>Code</SubType>
    </Compile>
  </ItemGroup>
  <!-- Include the build rules for a C# project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />
  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="VSTAHostName" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" />
        <Host Name="ScriptTask" />
        <ProjectClient>
          <HostIdentifier>SSIS_ST150</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
</Project>]]></ProjectItem>
          <ProjectItem
            Name="ScriptMain.cs"
            Encoding="UTF8"><![CDATA[#region Help:  Introduction to the script task
/* The Script Task allows you to perform virtually any operation that can be accomplished in
 * a .Net application within the context of an Integration Services control flow. 
 * 
 * Expand the other regions which have "Help" prefixes for examples of specific ways to use
 * Integration Services features within this script task. */
#endregion


#region Namespaces
using System;
using System.Data;
using Microsoft.SqlServer.Dts.Runtime;
using System.Windows.Forms;
using System.IO;
using System.Data.SqlClient;
#endregion

namespace ST_a4a2ca7f92f54dc0a692971f65d76eda
{
    /// <summary>
    /// ScriptMain is the entry point class of the script.  Do not change the name, attributes,
    /// or parent of this class.
    /// </summary>
	[Microsoft.SqlServer.Dts.Tasks.ScriptTask.SSISScriptTaskEntryPointAttribute]
	public partial class ScriptMain : Microsoft.SqlServer.Dts.Tasks.ScriptTask.VSTARTScriptObjectModelBase
	{
        #region Help:  Using Integration Services variables and parameters in a script
        /* To use a variable in this script, first ensure that the variable has been added to 
         * either the list contained in the ReadOnlyVariables property or the list contained in 
         * the ReadWriteVariables property of this script task, according to whether or not your
         * code needs to write to the variable.  To add the variable, save this script, close this instance of
         * Visual Studio, and update the ReadOnlyVariables and 
         * ReadWriteVariables properties in the Script Transformation Editor window.
         * To use a parameter in this script, follow the same steps. Parameters are always read-only.
         * 
         * Example of reading from a variable:
         *  DateTime startTime = (DateTime) Dts.Variables["System::StartTime"].Value;
         * 
         * Example of writing to a variable:
         *  Dts.Variables["User::myStringVariable"].Value = "new value";
         * 
         * Example of reading from a package parameter:
         *  int batchId = (int) Dts.Variables["$Package::batchId"].Value;
         *  
         * Example of reading from a project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].Value;
         * 
         * Example of reading from a sensitive project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].GetSensitiveValue();
         * */

        #endregion

        #region Help:  Firing Integration Services events from a script
        /* This script task can fire events for logging purposes.
         * 
         * Example of firing an error event:
         *  Dts.Events.FireError(18, "Process Values", "Bad value", "", 0);
         * 
         * Example of firing an information event:
         *  Dts.Events.FireInformation(3, "Process Values", "Processing has started", "", 0, ref fireAgain)
         * 
         * Example of firing a warning event:
         *  Dts.Events.FireWarning(14, "Process Values", "No values received for input", "", 0);
         * */
        #endregion

        #region Help:  Using Integration Services connection managers in a script
        /* Some types of connection managers can be used in this script task.  See the topic 
         * "Working with Connection Managers Programatically" for details.
         * 
         * Example of using an ADO.Net connection manager:
         *  object rawConnection = Dts.Connections["Sales DB"].AcquireConnection(Dts.Transaction);
         *  SqlConnection myADONETConnection = (SqlConnection)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Sales DB"].ReleaseConnection(rawConnection);
         *
         * Example of using a File connection manager
         *  object rawConnection = Dts.Connections["Prices.zip"].AcquireConnection(Dts.Transaction);
         *  string filePath = (string)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Prices.zip"].ReleaseConnection(rawConnection);
         * */
        #endregion


        /// <summary>
        /// This method is called when this script task executes in the control flow.
        /// Before returning from this method, set the value of Dts.TaskResult to indicate success or failure.
        /// To open Help, press F1.
        /// </summary>

        public string txtLog = "";
		public void Main()
		{
            //User::Delimitador,User::Extension,Usser::FolderError,User::FolderOrigen,User::TablaDestino
            try
            {
                string Delimitador = Dts.Variables["User::Delimitador"].Value.ToString();
                string Extension = Dts.Variables["User::Extension"].Value.ToString();
                string FolderOrigen = Dts.Variables["User::FolderOrigen"].Value.ToString();
                string tablaDestino = Dts.Variables["User::TablaDestino"].Value.ToString();

                string[] fileEntries = Directory.GetFiles(FolderOrigen, "*" + Extension);
                foreach (string fileName in fileEntries)
                {
                    SqlConnection myADONETConnection = new SqlConnection();
                    myADONETConnection = (SqlConnection)(Dts.Connections["DESKTOP-S0BBK00.HT2"].AcquireConnection(Dts.Transaction) as SqlConnection);
                    int contador = 0;
                    string linea;

                    System.IO.StreamReader sourceFile = new System.IO.StreamReader(fileName);
                    while ((linea = sourceFile.ReadLine()) != null)
                    {
                        if (contador > 0)
                        {
                            string[] campos = linea.Split(Delimitador.ToCharArray()[0]);
                            this.addmyLog(campos[0] + " " + campos[1] + " " + campos[2] + " " + campos[3]);
                            
                            string query = "INSERT INTO " + tablaDestino
                                + " ( Carne, Nombre , LlevaLab, PosibleNota ) Values(' "
                                + campos[0] + "','" + campos[1] + "','" + campos[2] + "','" + campos[3]
                                + "')";
                            SqlCommand myCommand = new SqlCommand(query, myADONETConnection);
                            myCommand.ExecuteNonQuery();
                        }
                        contador++;
                    }


                //int counter = 0;
                //string line;
                //System.IO.StreamReader sourceFile = new System.IO.StreamReader(fileName);
                //while ((line = sourceFile.ReadLine()) != null)
                //{
                //    if (counter > 0)//la primera linea de cabezeras, no la tomamos en cuenta
                //    {
                //        string[] campos = line.Split(Delimitador.ToCharArray()[0]);
                //        this.addmyLog("delimitador: " + Delimitador);
                //        this.addmyLog("delimitador split: " + Delimitador.ToCharArray());
                //        this.addmyLog("Length campos: "+ campos.Length);
                //        string query = "INSERT INTO" + tablaDestino
                //            + "(Carne,Nombre,LlevaLab,PosibleNota) Values('"
                //            + campos[0] + "','" + campos[1] + "','" + campos[2] + "','" + campos[3] + "')";
                //        SqlCommand myCommand = new SqlCommand(query, myADONETConnection);
                //        myCommand.ExecuteNonQuery();
                //    }
                //    counter++;
                //}
                    sourceFile.Close();
                    Dts.TaskResult = (int)ScriptResults.Success;
                }
                this.mylog();
            }
            catch (Exception ex)
            {
                this.addmyLog("Error:\n" + ex.ToString());
                this.mylog();
                Dts.TaskResult = (int)ScriptResults.Failure;
            }
        }

        public void addmyLog(string txt)
        {
            if(this.txtLog == "")
            {
                this.txtLog = txt;
            }
            else
            {
                this.txtLog = this.txtLog + "\n" + txt;
            }
        }

        public void mylog()
        {
            using (StreamWriter sw = File.CreateText(Dts.Variables["User::FolderError"].Value.ToString() + "\\" + "ErrorLog.log"))
            {
                sw.WriteLine(this.txtLog);
            }

        }

        #region ScriptResults declaration
        /// <summary>
        /// This enum provides a convenient shorthand within the scope of this class for setting the
        /// result of the script.
        /// 
        /// This code was generated automatically.
        /// </summary>
        enum ScriptResults
        {
            Success = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Success,
            Failure = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Failure
        };
        #endregion

	}
}]]></ProjectItem>
          <ProjectItem
            Name="Project"
            Encoding="UTF16LE"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="4.0" schemaVersion="1.0">
  <msb:PropertyGroup>
    <msb:CodeName>ST_a4a2ca7f92f54dc0a692971f65d76eda</msb:CodeName>
    <msb:Language>msBuild</msb:Language>
    <msb:DisplayName>ST_a4a2ca7f92f54dc0a692971f65d76eda</msb:DisplayName>
    <msb:ProjectId>{6FDC6C8B-89CB-4CDD-BD58-C4A8A7F30362}</msb:ProjectId>
  </msb:PropertyGroup>
  <msb:ItemGroup>
    <msb:Project Include="ST_a4a2ca7f92f54dc0a692971f65d76eda.csproj" />
    <msb:File Include="Properties\Settings.settings" />
    <msb:File Include="Properties\AssemblyInfo.cs" />
    <msb:File Include="Properties\Resources.resx" />
    <msb:File Include="Properties\Resources.Designer.cs" />
    <msb:File Include="Properties\Settings.Designer.cs" />
    <msb:File Include="ScriptMain.cs" />
  </msb:ItemGroup>
</c:Project>]]></ProjectItem>
          <ProjectItem
            Name="Properties\AssemblyInfo.cs"
            Encoding="UTF8"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("ST_a4a2ca7f92f54dc0a692971f65d76eda")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("")]
[assembly: AssemblyProduct("ST_a4a2ca7f92f54dc0a692971f65d76eda")]
[assembly: AssemblyCopyright("Copyright @  2021")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.*")]]]></ProjectItem>
          <ProjectItem
            Name="Properties\Settings.settings"
            Encoding="UTF8"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></ProjectItem>
          <ProjectItem
            Name="Properties\Resources.Designer.cs"
            Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_a4a2ca7f92f54dc0a692971f65d76eda.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_a4a2ca7f92f54dc0a692971f65d76eda.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_a4a2ca7f92f54dc0a692971f65d76eda.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace ST_a4a2ca7f92f54dc0a692971f65d76eda.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("ST_a4a2ca7f92f54dc0a692971f65d76eda.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}]]></ProjectItem>
          <BinaryItem
            Name="ST_a4a2ca7f92f54dc0a692971f65d76eda.dll">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
AgbXABYAmQDXAAYAWwMZBAYAyQYKABYAIgbXABYAAgXXAAYA0QQZBA4AfgB7Bg4AdACyBAYA4wQK
AAYA0gAKAAYAIQUKAAYAogAZBAYACgEZBAYArgAZBAYAsAZ2BAAAAAABAAAAAAABAAEAAQAQADEE
OwA5AAEAAQAAABAAcwXPBVUAAgAFAAABEAAVBs8FaQAEAAkAAwEAAD4GAABNAAUADAAGAGIDzQAR
ACUE0AARAC8B1AARAIkA2AAGBjMA3ABWgC4G3wBWgA8B3wBQIAAAAACGADcEBgABAJgiAAAAAIYA
aQMQAAEAzCIAAAAAhgByAwYAAgAwIwAAAACGGCwFBgACAEMjAAAAAIMYLAUGAAIASyMAAAAAkwju
BOMAAgB3IwAAAACTCBcB6AACAH4jAAAAAJMIIwHtAAIAhiMAAAAAlghgBvMAAwCNIwAAAACGGCwF
BgADAJUjAAAAAJEYMgX4AAMAAAABAJwGAAABADkDCQAsBQEAEQAsBQYAGQAsBQoAKQAsBRAAMQAs
BRAAOQAsBRAAQQAsBRAASQAsBRAAUQAsBRAAWQAsBRAAYQAsBRAAaQAsBQYAoQAsBQYAyQAsBRUA
2QAsBQYAcQA2Bi4A4QD+BTMA6QAQBDgA8QAvAz4AqQBZA0IA+QBMBkYAAQEMBkwAeQAsBQYA4QAe
BlMACQEQBFkA4QBmBD4AEQGIBGAAgQAsBRAA+QCgBmUA+QBaBmoA+QBMBnEAIQEsBXcAKQG5Bn4A
MQH3AEIAMQFzAQYA4QBsBgEA+QDTBoIA+QBMBogAOQGRBpQAQQEAARAASQF5AQYAcQAsBQYAqQAs
BQYAUQHAAJoAUQGsBqMAsQAsBakA0QAsBQYACAAYAMMACAAcAMgAKQBzADMBLgALAAsBLgATABQB
LgAbADMBLgAjADwBLgArAGUBLgAzAGUBLgA7AGUBLgBDADwBLgBLAGsBLgBTAGUBLgBbAIIBQwBj
AMgASQBzADMBYwBrAMgAgQB7AMgAGwCPAAMAAQAEAAMAAADyBPwAAAA3AQEBAABkBgYBAgAGAAMA
AgAHAAUAAQAIAAUAAgAJAAcABIAAAAEAAAA0Ht+IAAAAAAAAOwAAAAQAAAAAAAAAAAAAALEAawAA
AAAADwAAAAAAAAAAAAAAugB4AwAAAAAEAAAAAAAAAAAAAACxAF8AAAAAAAQAAAAAAAAAAAAAALEA
GQQAAAAADwAAAAAAAAAAAAAAugAUAAAAAAAAAAAAAQAAAH0FAAAFAAIAAAAAPE1vZHVsZT4AU3lz
dGVtLklPAE1pY3Jvc29mdC5TcWxTZXJ2ZXIuTWFuYWdlZERUUwB2YWx1ZV9fAFNUX2E0YTJjYTdm
OTJmNTRkYzBhNjkyOTcxZjY1ZDc2ZWRhAFN5c3RlbS5EYXRhAG1zY29ybGliAERiQ29tbWFuZABT
cWxDb21tYW5kAGRlZmF1bHRJbnN0YW5jZQBWYXJpYWJsZQBJRGlzcG9zYWJsZQBSdW50aW1lVHlw
ZUhhbmRsZQBHZXRUeXBlRnJvbUhhbmRsZQBGaWxlAE1pY3Jvc29mdC5TcWxTZXJ2ZXIuRHRzLlJ1
bnRpbWUAUmVhZExpbmUAV3JpdGVMaW5lAFR5cGUARmFpbHVyZQBnZXRfQ3VsdHVyZQBzZXRfQ3Vs
dHVyZQByZXNvdXJjZUN1bHR1cmUAVlNUQVJUU2NyaXB0T2JqZWN0TW9kZWxCYXNlAEFwcGxpY2F0
aW9uU2V0dGluZ3NCYXNlAENsb3NlAERpc3Bvc2UARWRpdG9yQnJvd3NhYmxlU3RhdGUAQ29tcGls
ZXJHZW5lcmF0ZWRBdHRyaWJ1dGUARGVidWdnZXJOb25Vc2VyQ29kZUF0dHJpYnV0ZQBEZWJ1Z2dh
YmxlQXR0cmlidXRlAEVkaXRvckJyb3dzYWJsZUF0dHJpYnV0ZQBBc3NlbWJseVRpdGxlQXR0cmli
dXRlAEFzc2VtYmx5VHJhZGVtYXJrQXR0cmlidXRlAFRhcmdldEZyYW1ld29ya0F0dHJpYnV0ZQBB
c3NlbWJseUNvbmZpZ3VyYXRpb25BdHRyaWJ1dGUAQXNzZW1ibHlEZXNjcmlwdGlvbkF0dHJpYnV0
ZQBDb21waWxhdGlvblJlbGF4YXRpb25zQXR0cmlidXRlAEFzc2VtYmx5UHJvZHVjdEF0dHJpYnV0
ZQBBc3NlbWJseUNvcHlyaWdodEF0dHJpYnV0ZQBTU0lTU2NyaXB0VGFza0VudHJ5UG9pbnRBdHRy
aWJ1dGUAQXNzZW1ibHlDb21wYW55QXR0cmlidXRlAFJ1bnRpbWVDb21wYXRpYmlsaXR5QXR0cmli
dXRlAGdldF9WYWx1ZQB2YWx1ZQBTeXN0ZW0uUnVudGltZS5WZXJzaW9uaW5nAFRvU3RyaW5nAHR4
dExvZwBhZGRteUxvZwBteWxvZwBNaWNyb3NvZnQuU3FsU2VydmVyLlNjcmlwdFRhc2sATWljcm9z
b2Z0LlNxbFNlcnZlci5EdHMuVGFza3MuU2NyaXB0VGFzawBTY3JpcHRPYmplY3RNb2RlbABTeXN0
ZW0uQ29tcG9uZW50TW9kZWwAU1RfYTRhMmNhN2Y5MmY1NGRjMGE2OTI5NzFmNjVkNzZlZGEuZGxs
AGdldF9JdGVtAFN5c3RlbQBFbnVtAHJlc291cmNlTWFuAFNjcmlwdE1haW4AU3lzdGVtLkNvbmZp
Z3VyYXRpb24AU3lzdGVtLkdsb2JhbGl6YXRpb24AZ2V0X1RyYW5zYWN0aW9uAFN5c3RlbS5SZWZs
ZWN0aW9uAEFjcXVpcmVDb25uZWN0aW9uAFNxbENvbm5lY3Rpb24ARXhjZXB0aW9uAFN5c3RlbS5E
YXRhLkNvbW1vbgBDdWx0dXJlSW5mbwBDaGFyAFN0cmVhbVJlYWRlcgBUZXh0UmVhZGVyAGdldF9S
ZXNvdXJjZU1hbmFnZXIAQ29ubmVjdGlvbk1hbmFnZXIAU3RyZWFtV3JpdGVyAFRleHRXcml0ZXIA
LmN0b3IALmNjdG9yAFN5c3RlbS5EaWFnbm9zdGljcwBTeXN0ZW0uUnVudGltZS5Db21waWxlclNl
cnZpY2VzAFN5c3RlbS5SZXNvdXJjZXMAU1RfYTRhMmNhN2Y5MmY1NGRjMGE2OTI5NzFmNjVkNzZl
ZGEuUHJvcGVydGllcy5SZXNvdXJjZXMucmVzb3VyY2VzAERlYnVnZ2luZ01vZGVzAFNUX2E0YTJj
YTdmOTJmNTRkYzBhNjkyOTcxZjY1ZDc2ZWRhLlByb3BlcnRpZXMAZ2V0X1ZhcmlhYmxlcwBHZXRG
aWxlcwBTZXR0aW5ncwBnZXRfQ29ubmVjdGlvbnMAU3VjY2VzcwBnZXRfRHRzAFNjcmlwdFJlc3Vs
dHMAQ29uY2F0AE9iamVjdABTcGxpdABnZXRfRGVmYXVsdABzZXRfVGFza1Jlc3VsdABTeXN0ZW0u
RGF0YS5TcWxDbGllbnQAQ3JlYXRlVGV4dAB0eHQAVG9DaGFyQXJyYXkAZ2V0X0Fzc2VtYmx5AEV4
ZWN1dGVOb25RdWVyeQBEaXJlY3RvcnkAb3BfRXF1YWxpdHkAAAAjVQBzAGUAcgA6ADoARABlAGwA
aQBtAGkAdABhAGQAbwByAAAfVQBzAGUAcgA6ADoARQB4AHQAZQBuAHMAaQBvAG4AACVVAHMAZQBy
ADoAOgBGAG8AbABkAGUAcgBPAHIAaQBnAGUAbgAAJVUAcwBlAHIAOgA6AFQAYQBiAGwAYQBEAGUA
cwB0AGkAbgBvAAADKgAAJ0QARQBTAEsAVABPAFAALQBTADAAQgBCAEsAMAAwAC4ASABUADIAAQMg
AAAZSQBOAFMARQBSAFQAIABJAE4AVABPACAAAGkgACgAIABDAGEAcgBuAGUALAAgAE4AbwBtAGIA
cgBlACAALAAgAEwAbABlAHYAYQBMAGEAYgAsACAAUABvAHMAaQBiAGwAZQBOAG8AdABhACAAKQAg
AFYAYQBsAHUAZQBzACgAJwAgAAEHJwAsACcAAQUnACkAAQ9FAHIAcgBvAHIAOgAKAAABAAMKAAAj
VQBzAGUAcgA6ADoARgBvAGwAZABlAHIARQByAHIAbwByAAAbXABFAHIAcgBvAHIATABvAGcALgBs
AG8AZwAAcVMAVABfAGEANABhADIAYwBhADcAZgA5ADIAZgA1ADQAZABjADAAYQA2ADkAMgA5ADcA
MQBmADYANQBkADcANgBlAGQAYQAuAFAAcgBvAHAAZQByAHQAaQBlAHMALgBSAGUAcwBvAHUAcgBj
AGUAcwAAABNpluWaLOlLvt5J4EzMsEIABCABAQgDIAABBSABARERBCABAQ4FIAEBEWESBwsODg4d
DggSPQgOEkEdDhJFBCAAEnEEIAASdQUgARJ5HAMgABwDIAAOBQACDg4OBgACHQ4ODgUgABKAhQYg
ARKAiRwEIAEcHAQgAB0DBiABHQ4dAwUAAQ4dDgYgAgEOEj0DIAAIBQACAg4OBgADDg4ODgQHARJJ
BQABEkkOCAABEoCpEYCtBSAAEoCxByACAQ4SgLEIt3pcVhk04IkIiYRdzYCAzJEEAAAAAAQBAAAA
AgYOAwYSWQMGEl0DBhIQAgYIAwYRFAQAABJZBAAAEl0FAAEBEl0EAAASEAMAAAEECAASWQQIABJd
BAgAEhAIAQAIAAAAAAAeAQABAFQCFldyYXBOb25FeGNlcHRpb25UaHJvd3MBCAEAAgAAAAAAKAEA
I1NUX2E0YTJjYTdmOTJmNTRkYzBhNjkyOTcxZjY1ZDc2ZWRhAAAFAQAAAAAWAQARQ29weXJpZ2h0
IEAgIDIwMjEAAEkBABouTkVURnJhbWV3b3JrLFZlcnNpb249djQuNwEAVA4URnJhbWV3b3JrRGlz
cGxheU5hbWUSLk5FVCBGcmFtZXdvcmsgNC43tAAAAM7K774BAAAAkQAAAGxTeXN0ZW0uUmVzb3Vy
Y2VzLlJlc291cmNlUmVhZGVyLCBtc2NvcmxpYiwgVmVyc2lvbj00LjAuMC4wLCBDdWx0dXJlPW5l
dXRyYWwsIFB1YmxpY0tleVRva2VuPWI3N2E1YzU2MTkzNGUwODkjU3lzdGVtLlJlc291cmNlcy5S
dW50aW1lUmVzb3VyY2VTZXQCAAAAAAAAAAAAAABQQURQQURQtAAAAJQ0AAAAAAAAAAAAAK40AAAA
IAAAAAAAAAAAAAAAAAAAAAAAAAAAAACgNAAAAAAAAAAAAAAAAF9Db3JEbGxNYWluAG1zY29yZWUu
ZGxsAAAAAAD/JQAgABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAABABAAAAAYAACAAAAAAAAAAAAAAAAAAAABAAEAAAAwAACAAAAAAAAAAAAAAAAAAAABAAAAAABI
AAAAWEAAABoEAAAAAAAAAAAAABoENAAAAFYAUwBfAFYARQBSAFMASQBPAE4AXwBJAE4ARgBPAAAA
AAC9BO/+AAABAAAAAQDfiDQeAAABAN+INB4/AAAAAAAAAAQAAAACAAAAAAAAAAAAAAAAAAAARAAA
AAEAVgBhAHIARgBpAGwAZQBJAG4AZgBvAAAAAAAkAAQAAABUAHIAYQBuAHMAbABhAHQAaQBvAG4A
AAAAAAAAsAR6AwAAAQBTAHQAcgBpAG4AZwBGAGkAbABlAEkAbgBmAG8AAABWAwAAAQAwADAAMAAw
ADAANABiADAAAAAaAAEAAQBDAG8AbQBtAGUAbgB0AHMAAAAAAAAAIgABAAEAQwBvAG0AcABhAG4A
eQBOAGEAbQBlAAAAAAAAAAAAcAAkAAEARgBpAGwAZQBEAGUAcwBjAHIAaQBwAHQAaQBvAG4AAAAA
AFMAVABfAGEANABhADIAYwBhADcAZgA5ADIAZgA1ADQAZABjADAAYQA2ADkAMgA5ADcAMQBmADYA
NQBkADcANgBlAGQAYQAAAD4ADwABAEYAaQBsAGUAVgBlAHIAcwBpAG8AbgAAAAAAMQAuADAALgA3
ADcAMwAyAC4AMwA1ADAAMwA5AAAAAABwACgAAQBJAG4AdABlAHIAbgBhAGwATgBhAG0AZQAAAFMA
VABfAGEANABhADIAYwBhADcAZgA5ADIAZgA1ADQAZABjADAAYQA2ADkAMgA5ADcAMQBmADYANQBk
ADcANgBlAGQAYQAuAGQAbABsAAAASAASAAEATABlAGcAYQBsAEMAbwBwAHkAcgBpAGcAaAB0AAAA
QwBvAHAAeQByAGkAZwBoAHQAIABAACAAIAAyADAAMgAxAAAAKgABAAEATABlAGcAYQBsAFQAcgBh
AGQAZQBtAGEAcgBrAHMAAAAAAAAAAAB4ACgAAQBPAHIAaQBnAGkAbgBhAGwARgBpAGwAZQBuAGEA
bQBlAAAAUwBUAF8AYQA0AGEAMgBjAGEANwBmADkAMgBmADUANABkAGMAMABhADYAOQAyADkANwAx
AGYANgA1AGQANwA2AGUAZABhAC4AZABsAGwAAABoACQAAQBQAHIAbwBkAHUAYwB0AE4AYQBtAGUA
AAAAAFMAVABfAGEANABhADIAYwBhADcAZgA5ADIAZgA1ADQAZABjADAAYQA2ADkAMgA5ADcAMQBm
ADYANQBkADcANgBlAGQAYQAAAEIADwABAFAAcgBvAGQAdQBjAHQAVgBlAHIAcwBpAG8AbgAAADEA
LgAwAC4ANwA3ADMAMgAuADMANQAwADMAOQAAAAAARgAPAAEAQQBzAHMAZQBtAGIAbAB5ACAAVgBl
AHIAcwBpAG8AbgAAADEALgAwAC4ANwA3ADMAMgAuADMANQAwADMAOQAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADAAAAwAAADANAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA=</BinaryItem>
        </ScriptProject>
      </DTS:ObjectData>
    </DTS:Executable>
  </DTS:Executables>
  <DTS:DesignTimeProperties><![CDATA[<?xml version="1.0"?>
<!--This CDATA section contains the layout information of the package. The section includes information such as (x,y) coordinates, width, and height.-->
<!--If you manually edit this section and make a mistake, you can delete it. -->
<!--The package will still be able to load normally but the previous layout information will be lost and the designer will automatically re-arrange the elements on the design surface.-->
<Objects
  Version="8">
  <!--Each node below will contain properties that do not affect runtime behavior.-->
  <Package
    design-time-name="Package">
    <LayoutInfo>
      <GraphLayout
        Capacity="4" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph">
        <NodeLayout
          Size="158,42"
          Id="Package\Cargar Temporal"
          TopLeft="223,43" />
      </GraphLayout>
    </LayoutInfo>
  </Package>
</Objects>]]></DTS:DesignTimeProperties>
</DTS:Executable>